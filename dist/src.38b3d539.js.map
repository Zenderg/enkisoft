{"version":3,"sources":["components/Carousel/script.js","components/Contacts/script.js","components/Header/script.js","scroll.js","index.js"],"names":["slider","currentIndex","offset","document","getElementById","header","querySelector","subMenuItems","querySelectorAll","indicators","blocks","blockCount","length","changeCurrentIndex","newIndex","classList","contains","remove","style","marginLeft","forEach","item","i","className","slide","direction","sliderListener","addEventListener","key","window","ymaps","ready","init","myMap","Map","center","zoom","controls","placemark","Placemark","iconLayout","iconImageHref","placemarkIcon","iconImageSize","geoObjects","add","links","burger","href","getAttribute","click","scrollIntoView","behavior","e","scrollValue","scrollY","link","iter","index","y","getBoundingClientRect","diff","nextI","blockScroll","sections","scrollInSection","delta","innerWidth","yArr","push","Math","abs","min","setTimeout","deltaY"],"mappings":"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","file":"src.38b3d539.js","sourceRoot":"../src","sourcesContent":["\n\nexport function slider() {\n    let currentIndex = 0;\n    const offset = document.getElementById(\"carousel-offset\");\n    const header = document.querySelector(\".header\");\n    const subMenuItems = document.querySelectorAll(\".sub-menu-item\");\n\n    const indicators = document.querySelectorAll(\".slider>.indicator\");\n    const blocks = document.querySelectorAll(\".blocks-container>.block\");\n\n    const blockCount = blocks.length;\n\n    const changeCurrentIndex = (newIndex) => {\n        currentIndex = newIndex;\n        if(header.classList.contains(\"active\")){\n            header.classList.remove(\"active\");\n        }\n        offset.style.marginLeft = `calc(${currentIndex} * -100%)`;\n        indicators.forEach((item, i) => {\n            item.className = i === currentIndex ? \"indicator active\" : \"indicator\";\n        });\n        blocks.forEach((item, i) => {\n            item.className = i === currentIndex ? \"block active\" : \"block\";\n        });\n\n    };\n\n    const slide = (direction) => {\n        const newIndex =  (currentIndex + direction) % blockCount;\n        currentIndex = (newIndex < 0) ? blockCount-1 : newIndex;\n        changeCurrentIndex(currentIndex);\n    };\n    const sliderListener = (item, i) => {\n        item.addEventListener(\"click\", () => changeCurrentIndex(i));\n    };\n\n    subMenuItems.forEach(sliderListener);\n    indicators.forEach(sliderListener);\n\n    document.addEventListener(\"keydown\", ({key}) => {\n        if(key === \"ArrowRight\"){\n            slide(1);\n        } else if(key === \"ArrowLeft\"){\n            slide(-1);\n        }\n    });\n    document.getElementById(\"carousel-button-prev\").addEventListener(\"click\", () => slide(-1));\n    document.getElementById(\"carousel-button-next\").addEventListener(\"click\", () => slide( 1));\n\n}\n","import placemarkIcon from \"/components/Contacts/assets/placemark.svg\";\n\nwindow.addEventListener(\"load\", () => {\n    ymaps.ready(init);\n\n    function init(){\n        var myMap = new ymaps.Map(\"contacts-map\", {\n            center: [51.671929, 39.194751],\n            zoom: 18,\n            controls: [],\n        });\n\n        var placemark = new ymaps.Placemark([51.671753, 39.196515], {}, {\n            iconLayout: 'default#image',\n            iconImageHref: placemarkIcon,\n            iconImageSize: [50, 50],\n        });\n\n\n        myMap.geoObjects.add(placemark);\n\n    }\n\n});\n","window.addEventListener(\"load\", () => {\n    const links = document.querySelectorAll(\".menu-link\");\n    const burger = document.querySelector(\".burger\");\n    const header = document.querySelector(\".header\");\n\n    links.forEach(item => {\n        item.addEventListener(\"click\", () => {\n            const href = item.getAttribute(\"data-href\");\n            burger.click();\n\n            document.querySelector(`.${ href }`).scrollIntoView({ behavior: \"smooth\" });\n        });\n    });\n\n    document.addEventListener(\"scroll\", (e) => {\n        const scrollValue = window.scrollY;\n\n        const iter = (item, index = 0) => {\n            const href = item.getAttribute(\"data-href\");\n            const anchor = document.querySelector(`.${ href }`);\n            const y = anchor.getBoundingClientRect().y;\n            const diff = scrollValue - y;\n            const offset = 200;\n\n            if (diff >= offset) {\n                const nextI = index + 1;\n                return links[nextI] ? iter(links[nextI], nextI) : links[index].classList.add(\"link-active\")\n            }\n\n            if (index === 0) return item.classList.add(\"link-active\");\n            return links[index - 1].classList.add(\"link-active\");\n        };\n\n        links.forEach(link => link.classList.remove(\"link-active\"));\n\n        iter(links[0]);\n    });\n\n    burger.addEventListener(\"click\", () => {\n        if (header.classList.contains(\"active\")) return header.classList.remove(\"active\");\n        else header.classList.add(\"active\");\n    });\n});\n","window.addEventListener(\"load\", () => {\n    let blockScroll = false;\n    const mobileWidth = 1200;\n    const sections = document.querySelectorAll(\"section\");\n\n    const scrollInSection = (delta) => {\n        if (blockScroll || window.innerWidth < mobileWidth) return false;\n\n        const yArr = [];\n\n        sections.forEach(item => yArr.push(Math.abs(item.getBoundingClientRect().y)));\n\n        yArr.forEach((y, index) => {\n\n            if (y === 0 || y === Math.min(...yArr)) {\n                if (delta < 0 ? index === 0 : index === sections.length - 1) return false;\n                blockScroll = true;\n                sections[delta < 0 ? index - 1 : index + 1].scrollIntoView({ behavior: \"smooth\" })\n            }\n        });\n\n        setTimeout(() => blockScroll = false, 700);\n    };\n\n    window.addEventListener(\"wheel\", (e) => scrollInSection(e.deltaY));\n});","import { slider } from \"./components/Carousel/script\";\nimport \"./components/Contacts/script\";\nimport \"./components/Header/script\";\nimport \"./scroll\"\n\nslider();\n"]}